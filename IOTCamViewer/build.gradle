apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.squareup.picasso:picasso:+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:+'
    compile 'com.loopj.android:android-async-http:1.4.9'
//    compile 'com.squareup.okhttp:okhttp:+'
    compile(project(':actionbarsherlocklibrary')) {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile(project(':jakewharton')) {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile(project(':SlidingMenulibrary')) {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile project(':AVIOCTRLDEF:AVIOCtrlDefine')
    compile('com.crashlytics.sdk.android:crashlytics:2.4.0@aar') {
        transitive = true;
    }
    compile 'com.android.support:support-v4:23.0.1'
//    compile 'com.google.android.gms:play-services-gcm:8.1.0'

}

android {
    compileSdkVersion 16
    buildToolsVersion "21.1.2"

    productFlavors {

        Kalay_Car {
//            applicationId = "tw.haotek.ap.CamBoss"
            applicationId = "tw.haotek.app.WinCam"
            versionCode 1
            versionName = "1.0.15"
        }

    }

    sourceSets {
        main {
            java.srcDirs = ['src/main']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }



        Kalay_Car {
            java.srcDirs = ['src/Kalay_Car']
            jniLibs.srcDirs = ['libs/Kalay_Car']
        }
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/NOTICE'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    buildTypes {

        debug {
            minifyEnabled false
            zipAlignEnabled true
            // Remove useless resource
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            zipAlignEnabled true
            // Remove useless resource
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // apk file's name
//                        def fileName = "${variant.productFlavors[0].name}_${variant.productFlavors[0].versionName}.apk"
//                        def fileName = "CamBoss_${variant.productFlavors[0].versionName}.apk"
                        def fileName = "WinCam_${variant.productFlavors[0].versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
}
